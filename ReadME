DAGGER 2 IN Android? 

1. What is Dependency Injection?

Ans: Suppose class A is dependent on class B,  Then class B is the dependency of class A. 

Like A Car class. Lets think our car needs an engine and a wheet. So lets make the car class

class Car{
  Engine engine;
  Wheel wheel;
  
  public Car(Engine engine, Wheel wheel){
    this.engine = engine;
    this.wheel = wheel;
  
  }
  
  public void drive(){
  }
  
}


So now if we want to make a car in our main method, we have to do it like this. 

class Main{

  Engine engine = new Engine();
  WHeel wheel = new Wheel();
  
  Car car = new Car(engine, wheel);
  car.drive();

}

now the engine may have other parts dependencies to make, like cylender, block etc. So finally we have to write lots of code.
But here comes Dagger . We can simply use daggar and then out car object should look like this. 

class Main{
  CarComponent component = DaggerComponenet.create();
  Car car = component.getCar();
  car.drive();

}
Dagger will create all the necessay parts for the car ,and we dont have to do it. 


2. Add Devendency for Dagger 2 in gradle
  compile 'com.google.dagger:dagger:2.x' // current version 2.23.1
  annotationProcessor 'com.google.dagger:dagger-compiler:2.x' // current version 2.23.1

3. What is annotation processing? 
Link: https://www.youtube.com/watch?v=xswPPwYPAFM


4. DAG
=> Directed Acyclic Graph. Dagger create a graph in compile time with the annotation processor we declare in our project,
eg: @Component, @Inject . This graph is called DIrected Acyclic Graph. From this the name Dagger came. 


*** Must Read https://www.vogella.com/tutorials/Dagger/article.html

---------------------------------------------------------------------------------------------

=>  We Can @Inject in 3 places 
  1. Constructor
  2. Fiels
  3. Methods
If Contructor Injected then Fields and Methods automatically Injected

* We cant Inject Activity, Thats why for Field injection we have pass a referance to Component of the activity
 void inject(MainActivity activity);


